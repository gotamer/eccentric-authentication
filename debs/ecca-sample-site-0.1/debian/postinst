#!/bin/sh
# postinst script for ecca-sample-sites
#
# see: dh_installdeb(1)

set -ex


. /usr/share/debconf/confmodule

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
	ROOTCONF=/etc/ecca/rootCA/openssl-rootca.cnf
	#ROOTCAKEY=/etc/ecca/rootCA/private/cakey.pem
	ROOTCACERT=/etc/ecca/rootCA/cacert.pem
	SAMPLE_SERVER_KEY=/etc/ecca/sample/sample-server-key.pem
	SAMPLE_SERVER_CERT=/etc/ecca/sample/sample-server-cert.pem
	SAMPLE_SERVER_CHAIN=/etc/ecca/sample/sample-server-cert-chain.pem    

	if [ ! -e $SAMPLE_SERVER_KEY ]
	then    
            ## read the CA parameters, 
	    ## we need to create a server certificate signed by the root and it requires 
	    ## these values.
	    db_get ecca-ca/countrycode         ; COUNTRY=${RET:?missing value for countrycode}
	    db_get ecca-ca/state-or-province   ; STATE=${RET:-\.}
	    db_get ecca-ca/locality            ; CITY=${RET:?missing value for locality}
	    db_get ecca-ca/organization        ; ORG=${RET:?missing value for organization}
	    db_get ecca-ca/email-address       ; EMAIL=${RET:?missing value for email-address}
	    db_get ecca-ca/organizational-unit ; ORGUNIT=${RET:-\.}
	    db_get ecca-sample-site/servername ; SERVERCN=${RET:?missing value for servername}
	    
	    SERVERCSR=`mktemp`

	    openssl genrsa -out $SAMPLE_SERVER_KEY 2048
	    openssl req -new -key $SAMPLE_SERVER_KEY -out $SERVERCSR \
		-subj "/C=$COUNTRY/ST=$STATE/L=$CITY/O=$ORG/OU=$ORGUNIT/CN=$SERVERCN"
	    
	    openssl ca -config $ROOTCONF -out $SAMPLE_SERVER_CERT -days 365 \
		-extensions usr_cert -batch -infiles $SERVERCSR
	    
	    cat $SAMPLE_SERVER_CERT $ROOTCACERT > $SAMPLE_SERVER_CHAIN
	    
	    rm -f $SERVERCSR
	fi
	;;

    abort-upgrade|abort-remove|abort-deconfigure)
	## nothing
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
